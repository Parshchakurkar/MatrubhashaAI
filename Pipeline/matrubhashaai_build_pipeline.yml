#Developer : Prashant Chakurkar
# date: 03/09/2025

name: $(Build.DefinitionName)_$(Build.SourceBranchName)_1.0.0.$(rev:rrrr)

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'source'
      - 'Pipeline/matrubhashaai_build_pipeline.yml'

variables:
  - name: configuration 
    value: "Release"
  - name: solutionpath 
    value: '$(Build.SourcesDirectory)/source/MatrubhashaAI.sln'
  - name: snykServiceConnection
    value: snyk-connection
  - name: snykProjectName
    value: 'Parshchakurkar/MatrubhashaAI'
  - name: snykOrg 
    value: 'parshchakurkar' 
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      - name: SnykMonitor
        value: 'always'
  - ${{ else }}:
      - name: SnykMonitor
        value: 'never'

  #Docker job variables
  - name: serviceConnection 
    value: matrubhashaai_project
  - name: ACRname 
    value: matrubhashaaiacr
  - name: AcrPrefix
    value: matrubhashaaiacr.azurecr.io
  
pool:
  vmImage: windows-latest

jobs:

  - job: Build
    displayName: Build And Publish Application
    steps:
      - checkout: self

      - task: NuGetCommand@2
        displayName: Nuget restore
        inputs:
          command: "restore"
          restoreSolution: '$(solutionpath)'
          feedsToUse: "config"

      - task: VSBuild@1
        displayName: "Matrubhasha build"
        inputs:
          solution: '$(solutionpath)'
          configuration: $(configuration)

      - task: PowerShell@2
        displayName: "Folder Creation"
        inputs:
          targetType: "inline"
          script: "mkdir $env:BUILD_SOURCESDIRECTORY/Setup"

      - task: CopyFiles@2
        displayName: "Copy Files"
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/source/bin/$(configuration)/net8.0/'
          Contents: '**'
          TargetFolder: '$(Build.SourcesDirectory)/Setup'
          OverWrite: true

      - task: PublishPipelineArtifact@1
        displayName: publishSetup
        inputs:
          targetPath: "$(Build.SourcesDirectory)/Setup"
          artifact: "Setup"
          publishLocation: "pipeline"

  - job: SnykScan
    displayName: 'Snyk Scan'
    dependsOn: Build
    steps:
      - checkout: self

      - task: NuGetCommand@2
        displayName: 'Nuget Restore'
        inputs:
          command: 'restore'
          restoreSolution: '$(Build.SourcesDirectory)/source/MatrubhashaAI.sln'
          feedsToUse: 'select'
          vstsFeed: 'fb72fbac-d94e-45b7-96d4-7f2990641340'
      
      - task: SnykSecurityScan@1
        displayName: "Snyk OSS Scan"
        condition: and(succeeded(),eq(variables.isMain, 'true'))
        inputs:
          serviceConnectionEndpoint: '$(snykServiceConnection)'
          testType: 'app'
          monitorWhen: '$(SnykMonitor)'
          failOnIssues: false
          organization: '$(snykOrg)'
          additionalArguments: '--all-projects --target-reference=$(snykProjectName) --exclude="kubernetes","terraform","cluster creation","vmCreation","Pipeline"'
          failOnThreshold: 'critical'

      - task: SnykSecurityScan@1
        displayName: "Snyk Code Scan"
        condition: and(succeeded(),eq(variables.isMain, 'true'))
        inputs:
          serviceConnectionEndpoint: '$(snykServiceConnection)'
          testType: 'code'
          failOnIssues: false
          organization: '$(snykOrg)'
          failOnThreshold: 'high'
          monitorWhen: '$(SnykMonitor)'

# push and scan only when there is trigger from main branch
  - job: BuildandpushImage
    displayName: 'Create image from the Dockerfile'
    dependsOn: SnykScan
    condition: and(succeeded(),eq(variables.isMain, true))
    steps:
    - task: Docker@1
      displayName: Dockerbuild
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscriptionEndpoint: '$(serviceConnection)'
        azureContainerRegistry: '$(AcrPrefix)'
        command: 'Build an image'
        dockerFile: 'source/DockerFile'
        imageName: 'matrubhashaai:$(Build.BuildId)'

    - task: SnykSecurityScan@1
      displayName: scan the image
      inputs:
        serviceConnectionEndpoint: 'snyk-connection'
        testType: 'container'
        dockerImageName: 'matrubhashaaiacr.azurecr.io/matrubhashaai:$(Build.BuildId)'
        dockerfilePath: 'source/DockerFile'
        monitorWhen: 'always'
        failOnIssues: false
        projectName: 'parshchakurkar/MatrubhashaAI'
        organization: 'parshchakurkar'

    - task: Docker@1
      displayName: Docker image push 
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscriptionEndpoint: '$(serviceConnection)'
        azureContainerRegistry: '$(AcrPrefix)'
        command: 'Push an image'
        imageName: 'matrubhashaai:$(Build.BuildId)'
  
  - job: GetImagetImageTag
    displayName: Get Image Docker image tag
    dependsOn: BuildandpushImage
    steps:
      - checkout: none
      - task: PowerShell@2
        displayName: Get Image Tag
        inputs:
          targetType: 'inline'
          script: |
            $tag = $env:Build_BuildId
            $envValue | Out-File -FilePath tag.txt -Encoding UTF8
          workingDirectory: '$(Build.SourcesDirectory)'
        
      - task: PublishPipelineArtifact@1
        displayName: Publish Tag File
        inputs:
          targetPath: '$(Build.SourcesDirectory)/tag.txt'
          artifact: 'tag'
          publishLocation: 'pipeline'

          
    
          